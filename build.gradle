plugins {
	id 'org.springframework.boot' version '2.6.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "org.openapi.generator" version "5.3.1"
}

group = 'com.jmconsultant'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'javax.validation:validation-api:2.0.1.Final'
	implementation 'io.springfox:springfox-swagger2:2.7.0'
	implementation 'org.openapitools:jackson-databind-nullable:0.2.1'


	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Karate dependencies
	testImplementation 'com.intuit.karate:karate-junit5:1.0.1'
	testImplementation 'com.intuit.karate:karate-apache:0.9.6'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

}

tasks.named('test') {
	useJUnitPlatform()
}

// This is required to place Karate's .feature files together
// with .java test classes
sourceSets {
	test {
		resources {
			srcDir file('src/test/java')
			exclude '**/*.java'
		}
	}
}

openApiGenerate {
	generatorName = "spring"
	inputSpec = "$rootDir/src/main/resources/api.yaml".toString()
	outputDir = "$buildDir/generated".toString()
	apiPackage = "com.jmconsultant.openapi.api"
	modelPackage = "com.jmconsultant.openapi.dto"
	templateDir = "$rootDir/src/main/resources/mustache".toString()
	importMappings= ["ApiResponseJM" : "com.jmconsultant.api.dto.response.ApiResponseJM"]
	additionalProperties= [
			responseEntity: "true"
	]
	configOptions = [
			dateLibrary: "java8",
			interfaceOnly: "true",
			implicitHeaders: "true",
			serializableModel: "true",
			skipDefaultInterface: "true",
			performBeanValidation: "false",
	]
}

compileJava.dependsOn 'openApiGenerate'

sourceSets.main.java.srcDirs 'build/generated/src/main/java'
sourceSets.main.java.srcDirs 'src/main/java'
